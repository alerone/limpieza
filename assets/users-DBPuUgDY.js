var f=e=>{throw TypeError(e)};var U=(e,s,a)=>s.has(e)||f("Cannot "+a);var p=(e,s,a)=>s.has(e)?f("Cannot add the same private member more than once"):s instanceof WeakSet?s.add(e):s.set(e,a);var v=(e,s,a)=>(U(e,s,"access private method"),a);import{d as i,s as q,r as l,b,q as x,l as d,e as j,f as w,p as k,i as z,j as T}from"./auth-CrKGMdkA.js";const r={alvaro:"lopezalvarezalvaro1@gmail.com",rubius:"rubenrubenm10@gmail.com",victor:"victorcortss@gmail.com",alex:"alexrequenaflaquer@gmail.com"},h={rubius:{name:"Rubiu"},alvaro:{name:"Álvaro"},victor:{name:"Víctor"},alex:{name:"Alex"}};var n,g;class K{constructor(){p(this,n);this.db=i,this.path="users/"}insert(s,a){q(l(i,this.path+s),a)}initUsers(s){for(const a of s){const t=H(a.email);this.insert(t,a)}}async addTaskNotDone(s){const a=l(i,v(this,n,g).call(this,s)),t=b(),c=x(a,j(),d(1)),o=await w(c);if(!o.exists()){await k(a,t);return}const u=o.val(),m=Object.keys(u)[0];u[m]!=t&&await k(a,t)}async removeTaskNotDone(s){const a=v(this,n,g).call(this,s),t=l(i,a),c=b(),o=x(t,j(),d(1)),u=await w(o);if(!u.exists())return;const m=u.val(),y=Object.keys(m)[0];if(m[y]!=c)return;const R=l(i,`${a}/${y}`);await z(R)}async listenToUserHistory(s="lopezalvarezalvaro1@gmail.com",a){const t=l(i,v(this,n,g).call(this,s));T(t,c=>{const o=c.val();o&&a(Object.values(o))})}}n=new WeakSet,g=function(s){return this.path+H(s)+"/history"};function H(e){return e.split("@")[0]}const P=new K;function W(e){switch(e){case r.alex:return"./images/alex.jpg";case r.alvaro:return"./images/me.jpg";case r.rubius:return"./images/rubiu.jpg";case r.victor:return"./images/victor.jpg"}}function B(e){switch(e){case r.alex:return h.alex.name;case r.alvaro:return h.alvaro.name;case r.rubius:return h.rubius.name;case r.victor:return h.victor.name}}export{B as a,W as g,P as u};
